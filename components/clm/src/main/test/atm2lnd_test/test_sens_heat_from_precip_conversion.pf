module test_sens_heat_from_precip_conversion

  ! Tests of atm2lndMod: sens_heat_from_precip_conversion
  ! This module just tests edge cases that would be difficult to test from the
  ! multi-point wrapper.

  use pfunit_mod
  use atm2lndMod
  use shr_kind_mod, only : r8 => shr_kind_r8
  use clm_varcon, only : hfus   ! latent heat of fusion for ice [J/kg]
  use clm_varcon, only : denh2o ! density of liquid water [kg/m3]

  implicit none

  real(r8), parameter :: tol = 1.e-13_r8
  real(r8), parameter :: mm_to_m = 1.e-3_r8  ! multiply by this to convert from mm to m

contains

  @Test
  subroutine partialConversion_resultsInCorrectHeatFlux()
    real(r8), parameter :: rain_old = 2._r8  ! [mm]
    real(r8), parameter :: snow_old = 5._r8  ! [mm]
    real(r8), parameter :: rain_new = 6._r8  ! [mm]
    real(r8), parameter :: snow_new = 1._r8  ! [mm]
    real(r8) :: sens_heat_flux  ! [W/m2 to atm]
    real(r8) :: expected

    call sens_heat_from_precip_conversion( &
         rain_old = rain_old, &
         snow_old = snow_old, &
         rain_new = rain_new, &
         snow_new = snow_new, &
         sens_heat_flux = sens_heat_flux)

    ! Snow to rain extracts energy, so results in a negative heat flux to atm
    expected = -4._r8 * mm_to_m * denh2o * hfus
    @assertEqual(expected, sens_heat_flux, tolerance=tol)

  end subroutine partialConversion_resultsInCorrectHeatFlux

end module test_sens_heat_from_precip_conversion

